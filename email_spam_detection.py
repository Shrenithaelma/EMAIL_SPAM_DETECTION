# -*- coding: utf-8 -*-
"""Email_spam_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ekN0aJyNCIr0Q6FKvxGs_pj4mC5sUIZT

Importing libraries
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
from wordcloud import WordCloud

df = pd.read_csv('/content/spam_ham_dataset.csv')
df.head()

print(df.isna().sum())

df = df.drop('Unnamed: 0', axis=1)

#Destribution of Target Variable
counts = df['label_num'].value_counts()
plt.pie(counts, labels= counts.index, autopct='%1.1f%%', startangle=140)

X = df['text']
y = df['label_num']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#converting text data into a numerical format
vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Train the Naive Bayes model
naive_model = MultinomialNB()
naive_model.fit(X_train_vec, y_train)

# Predict using the trained model
y_pred = naive_model.predict(X_test_vec)

accuracy = accuracy_score(y_test, y_pred)
print(accuracy)

print('Classification Report:')
print(classification_report(y_test, y_pred))

